// THE AUTOGENERATED LICENSE. ALL THE RIGHTS ARE RESERVED BY ROBOTS.

// WARNING: This file has automatically been generated on Tue, 13 Dec 2016 00:30:19 GMT.
// By https://git.io/cgogen. DO NOT EDIT.

#include <linux/perf_event.h>
#include <stdlib.h>
#pragma once

#define __CGOGEN 1

inline void set_bitfield_perf_event_attr_disabled(struct perf_event_attr *v, int x) { v->disabled = x; }

inline void set_bitfield_perf_event_attr_inherit(struct perf_event_attr *v, int x) { v->inherit = x; }

inline void set_bitfield_perf_event_attr_pinned(struct perf_event_attr *v, int x) { v->pinned = x; }

inline void set_bitfield_perf_event_attr_exclusive(struct perf_event_attr *v, int x) { v->exclusive = x; }

inline void set_bitfield_perf_event_attr_exclude_user(struct perf_event_attr *v, int x) { v->exclude_user = x; }

inline void set_bitfield_perf_event_attr_exclude_kernel(struct perf_event_attr *v, int x) { v->exclude_kernel = x; }

inline void set_bitfield_perf_event_attr_exclude_hv(struct perf_event_attr *v, int x) { v->exclude_hv = x; }

inline void set_bitfield_perf_event_attr_exclude_idle(struct perf_event_attr *v, int x) { v->exclude_idle = x; }

inline void set_bitfield_perf_event_attr_mmap(struct perf_event_attr *v, int x) { v->mmap = x; }

inline void set_bitfield_perf_event_attr_comm(struct perf_event_attr *v, int x) { v->comm = x; }

inline void set_bitfield_perf_event_attr_freq(struct perf_event_attr *v, int x) { v->freq = x; }

inline void set_bitfield_perf_event_attr_inherit_stat(struct perf_event_attr *v, int x) { v->inherit_stat = x; }

inline void set_bitfield_perf_event_attr_enable_on_exec(struct perf_event_attr *v, int x) { v->enable_on_exec = x; }

inline void set_bitfield_perf_event_attr_task(struct perf_event_attr *v, int x) { v->task = x; }

inline void set_bitfield_perf_event_attr_watermark(struct perf_event_attr *v, int x) { v->watermark = x; }

inline void set_bitfield_perf_event_attr_precise_ip(struct perf_event_attr *v, int x) { v->precise_ip = x; }

inline void set_bitfield_perf_event_attr_mmap_data(struct perf_event_attr *v, int x) { v->mmap_data = x; }

inline void set_bitfield_perf_event_attr_sample_id_all(struct perf_event_attr *v, int x) { v->sample_id_all = x; }

inline void set_bitfield_perf_event_attr_exclude_host(struct perf_event_attr *v, int x) { v->exclude_host = x; }

inline void set_bitfield_perf_event_attr_exclude_guest(struct perf_event_attr *v, int x) { v->exclude_guest = x; }

inline void set_bitfield_perf_event_attr_exclude_callchain_kernel(struct perf_event_attr *v, int x) { v->exclude_callchain_kernel = x; }

inline void set_bitfield_perf_event_attr_exclude_callchain_user(struct perf_event_attr *v, int x) { v->exclude_callchain_user = x; }

inline void set_bitfield_perf_event_attr_mmap2(struct perf_event_attr *v, int x) { v->mmap2 = x; }

inline void set_bitfield_perf_event_attr_comm_exec(struct perf_event_attr *v, int x) { v->comm_exec = x; }

inline void set_bitfield_perf_event_attr_use_clockid(struct perf_event_attr *v, int x) { v->use_clockid = x; }

inline void set_bitfield_perf_event_attr_context_switch(struct perf_event_attr *v, int x) { v->context_switch = x; }

inline void set_bitfield_perf_event_attr_write_backward(struct perf_event_attr *v, int x) { v->write_backward = x; }

inline void set_bitfield_perf_event_attr___reserved_1(struct perf_event_attr *v, int x) { v->__reserved_1 = x; }

inline __u64 get_bitfield_perf_event_attr_disabled(struct perf_event_attr *v) { return v->disabled; }

inline __u64 get_bitfield_perf_event_attr_inherit(struct perf_event_attr *v) { return v->inherit; }

inline __u64 get_bitfield_perf_event_attr_pinned(struct perf_event_attr *v) { return v->pinned; }

inline __u64 get_bitfield_perf_event_attr_exclusive(struct perf_event_attr *v) { return v->exclusive; }

inline __u64 get_bitfield_perf_event_attr_exclude_user(struct perf_event_attr *v) { return v->exclude_user; }

inline __u64 get_bitfield_perf_event_attr_exclude_kernel(struct perf_event_attr *v) { return v->exclude_kernel; }

inline __u64 get_bitfield_perf_event_attr_exclude_hv(struct perf_event_attr *v) { return v->exclude_hv; }

inline __u64 get_bitfield_perf_event_attr_exclude_idle(struct perf_event_attr *v) { return v->exclude_idle; }

inline __u64 get_bitfield_perf_event_attr_mmap(struct perf_event_attr *v) { return v->mmap; }

inline __u64 get_bitfield_perf_event_attr_comm(struct perf_event_attr *v) { return v->comm; }

inline __u64 get_bitfield_perf_event_attr_freq(struct perf_event_attr *v) { return v->freq; }

inline __u64 get_bitfield_perf_event_attr_inherit_stat(struct perf_event_attr *v) { return v->inherit_stat; }

inline __u64 get_bitfield_perf_event_attr_enable_on_exec(struct perf_event_attr *v) { return v->enable_on_exec; }

inline __u64 get_bitfield_perf_event_attr_task(struct perf_event_attr *v) { return v->task; }

inline __u64 get_bitfield_perf_event_attr_watermark(struct perf_event_attr *v) { return v->watermark; }

inline __u64 get_bitfield_perf_event_attr_precise_ip(struct perf_event_attr *v) { return v->precise_ip; }

inline __u64 get_bitfield_perf_event_attr_mmap_data(struct perf_event_attr *v) { return v->mmap_data; }

inline __u64 get_bitfield_perf_event_attr_sample_id_all(struct perf_event_attr *v) { return v->sample_id_all; }

inline __u64 get_bitfield_perf_event_attr_exclude_host(struct perf_event_attr *v) { return v->exclude_host; }

inline __u64 get_bitfield_perf_event_attr_exclude_guest(struct perf_event_attr *v) { return v->exclude_guest; }

inline __u64 get_bitfield_perf_event_attr_exclude_callchain_kernel(struct perf_event_attr *v) { return v->exclude_callchain_kernel; }

inline __u64 get_bitfield_perf_event_attr_exclude_callchain_user(struct perf_event_attr *v) { return v->exclude_callchain_user; }

inline __u64 get_bitfield_perf_event_attr_mmap2(struct perf_event_attr *v) { return v->mmap2; }

inline __u64 get_bitfield_perf_event_attr_comm_exec(struct perf_event_attr *v) { return v->comm_exec; }

inline __u64 get_bitfield_perf_event_attr_use_clockid(struct perf_event_attr *v) { return v->use_clockid; }

inline __u64 get_bitfield_perf_event_attr_context_switch(struct perf_event_attr *v) { return v->context_switch; }

inline __u64 get_bitfield_perf_event_attr_write_backward(struct perf_event_attr *v) { return v->write_backward; }

inline __u64 get_bitfield_perf_event_attr___reserved_1(struct perf_event_attr *v) { return v->__reserved_1; }

