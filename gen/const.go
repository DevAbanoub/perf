// THE AUTOGENERATED LICENSE. ALL THE RIGHTS ARE RESERVED BY ROBOTS.

// WARNING: This file has automatically been generated on Tue, 13 Dec 2016 00:30:19 GMT.
// By https://git.io/cgogen. DO NOT EDIT.

package gen

/*
#include <linux/perf_event.h>
#include <stdlib.h>
#include "cgo_helpers.h"
*/
import "C"

const (
	// SampleBranchPlmAll as defined in linux/perf_event.h:204
	SampleBranchPlmAll = 0
	// AttrSizeVer0 as defined in linux/perf_event.h:269
	AttrSizeVer0 = 64
	// AttrSizeVer1 as defined in linux/perf_event.h:270
	AttrSizeVer1 = 72
	// AttrSizeVer2 as defined in linux/perf_event.h:271
	AttrSizeVer2 = 80
	// AttrSizeVer3 as defined in linux/perf_event.h:272
	AttrSizeVer3 = 96
	// AttrSizeVer4 as defined in linux/perf_event.h:274
	AttrSizeVer4 = 104
	// AttrSizeVer5 as defined in linux/perf_event.h:275
	AttrSizeVer5 = 112
	// EventIocEnable as defined in linux/perf_event.h:400
	EventIocEnable = 9216
	// EventIocDisable as defined in linux/perf_event.h:401
	EventIocDisable = 9217
	// EventIocRefresh as defined in linux/perf_event.h:402
	EventIocRefresh = 9218
	// EventIocReset as defined in linux/perf_event.h:403
	EventIocReset = 9219
	// EventIocSetOutput as defined in linux/perf_event.h:405
	EventIocSetOutput = 9221
	// RecordMiscCPUModeMask as defined in linux/perf_event.h:576
	RecordMiscCPUModeMask = (7 << 0)
	// RecordMiscCPUModeUnknown as defined in linux/perf_event.h:577
	RecordMiscCPUModeUnknown = (0 << 0)
	// RecordMiscKernel as defined in linux/perf_event.h:578
	RecordMiscKernel = (1 << 0)
	// RecordMiscUser as defined in linux/perf_event.h:579
	RecordMiscUser = (2 << 0)
	// RecordMiscHypervisor as defined in linux/perf_event.h:580
	RecordMiscHypervisor = (3 << 0)
	// RecordMiscGuestKernel as defined in linux/perf_event.h:581
	RecordMiscGuestKernel = (4 << 0)
	// RecordMiscGuestUser as defined in linux/perf_event.h:582
	RecordMiscGuestUser = (5 << 0)
	// RecordMiscProcMapParseTimeout as defined in linux/perf_event.h:587
	RecordMiscProcMapParseTimeout = (1 << 12)
	// RecordMiscMmapData as defined in linux/perf_event.h:593
	RecordMiscMmapData = (1 << 13)
	// RecordMiscCommExec as defined in linux/perf_event.h:594
	RecordMiscCommExec = (1 << 13)
	// RecordMiscSwitchOut as defined in linux/perf_event.h:595
	RecordMiscSwitchOut = (1 << 13)
	// RecordMiscExactIp as defined in linux/perf_event.h:601
	RecordMiscExactIp = (1 << 14)
	// RecordMiscExtReserved as defined in linux/perf_event.h:605
	RecordMiscExtReserved = (1 << 15)
	// MaxStackDepth as defined in linux/perf_event.h:868
	MaxStackDepth = 127
	// MaxContextsPerStack as defined in linux/perf_event.h:869
	MaxContextsPerStack = 8
	// AuxFlagTruncated as defined in linux/perf_event.h:886
	AuxFlagTruncated = 0x01
	// AuxFlagOverwrite as defined in linux/perf_event.h:887
	AuxFlagOverwrite = 0x02
	// FlagFdNoGroup as defined in linux/perf_event.h:889
	FlagFdNoGroup = (uint64(1) << 0)
	// FlagFdOutput as defined in linux/perf_event.h:890
	FlagFdOutput = (uint64(1) << 1)
	// FlagPidCgroup as defined in linux/perf_event.h:891
	FlagPidCgroup = (uint64(1) << 2)
	// FlagFdCloexec as defined in linux/perf_event.h:892
	FlagFdCloexec = (uint64(1) << 3)
	// MemOpNa as defined in linux/perf_event.h:907
	MemOpNa = 0x01
	// MemOpLoad as defined in linux/perf_event.h:908
	MemOpLoad = 0x02
	// MemOpStore as defined in linux/perf_event.h:909
	MemOpStore = 0x04
	// MemOpPfetch as defined in linux/perf_event.h:910
	MemOpPfetch = 0x08
	// MemOpExec as defined in linux/perf_event.h:911
	MemOpExec = 0x10
	// MemOpShift as defined in linux/perf_event.h:912
	MemOpShift = 0
	// MemLvlNa as defined in linux/perf_event.h:915
	MemLvlNa = 0x01
	// MemLvlHit as defined in linux/perf_event.h:916
	MemLvlHit = 0x02
	// MemLvlMiss as defined in linux/perf_event.h:917
	MemLvlMiss = 0x04
	// MemLvlL1 as defined in linux/perf_event.h:918
	MemLvlL1 = 0x08
	// MemLvlLfb as defined in linux/perf_event.h:919
	MemLvlLfb = 0x10
	// MemLvlL2 as defined in linux/perf_event.h:920
	MemLvlL2 = 0x20
	// MemLvlL3 as defined in linux/perf_event.h:921
	MemLvlL3 = 0x40
	// MemLvlLocRam as defined in linux/perf_event.h:922
	MemLvlLocRam = 0x80
	// MemLvlRemRam1 as defined in linux/perf_event.h:923
	MemLvlRemRam1 = 0x100
	// MemLvlRemRam2 as defined in linux/perf_event.h:924
	MemLvlRemRam2 = 0x200
	// MemLvlRemCce1 as defined in linux/perf_event.h:925
	MemLvlRemCce1 = 0x400
	// MemLvlRemCce2 as defined in linux/perf_event.h:926
	MemLvlRemCce2 = 0x800
	// MemLvlIo as defined in linux/perf_event.h:927
	MemLvlIo = 0x1000
	// MemLvlUnc as defined in linux/perf_event.h:928
	MemLvlUnc = 0x2000
	// MemLvlShift as defined in linux/perf_event.h:929
	MemLvlShift = 5
	// MemSnoopNa as defined in linux/perf_event.h:932
	MemSnoopNa = 0x01
	// MemSnoopNone as defined in linux/perf_event.h:933
	MemSnoopNone = 0x02
	// MemSnoopHit as defined in linux/perf_event.h:934
	MemSnoopHit = 0x04
	// MemSnoopMiss as defined in linux/perf_event.h:935
	MemSnoopMiss = 0x08
	// MemSnoopHitm as defined in linux/perf_event.h:936
	MemSnoopHitm = 0x10
	// MemSnoopShift as defined in linux/perf_event.h:937
	MemSnoopShift = 19
	// MemLockNa as defined in linux/perf_event.h:940
	MemLockNa = 0x01
	// MemLockLocked as defined in linux/perf_event.h:941
	MemLockLocked = 0x02
	// MemLockShift as defined in linux/perf_event.h:942
	MemLockShift = 24
	// MemTlbNa as defined in linux/perf_event.h:945
	MemTlbNa = 0x01
	// MemTlbHit as defined in linux/perf_event.h:946
	MemTlbHit = 0x02
	// MemTlbMiss as defined in linux/perf_event.h:947
	MemTlbMiss = 0x04
	// MemTlbL1 as defined in linux/perf_event.h:948
	MemTlbL1 = 0x08
	// MemTlbL2 as defined in linux/perf_event.h:949
	MemTlbL2 = 0x10
	// MemTlbWk as defined in linux/perf_event.h:950
	MemTlbWk = 0x20
	// MemTlbOs as defined in linux/perf_event.h:951
	MemTlbOs = 0x40
	// MemTlbShift as defined in linux/perf_event.h:952
	MemTlbShift = 26
)

// SampleFormat as declared in linux/perf_event.h:122
type SampleFormat int32

// SampleFormat enumeration from linux/perf_event.h:122
const (
	SampleIp          = C.PERF_SAMPLE_IP
	SampleTid         = C.PERF_SAMPLE_TID
	SampleTime        = C.PERF_SAMPLE_TIME
	SampleAddr        = C.PERF_SAMPLE_ADDR
	SampleRead        = C.PERF_SAMPLE_READ
	SampleCallchain   = C.PERF_SAMPLE_CALLCHAIN
	SampleID          = C.PERF_SAMPLE_ID
	SampleCpu         = C.PERF_SAMPLE_CPU
	SamplePeriod      = C.PERF_SAMPLE_PERIOD
	SampleStreamID    = C.PERF_SAMPLE_STREAM_ID
	SampleRaw         = C.PERF_SAMPLE_RAW
	SampleBranchStack = C.PERF_SAMPLE_BRANCH_STACK
	SampleRegsUser    = C.PERF_SAMPLE_REGS_USER
	SampleStackUser   = C.PERF_SAMPLE_STACK_USER
	SampleWeight      = C.PERF_SAMPLE_WEIGHT
	SampleDataSrc     = C.PERF_SAMPLE_DATA_SRC
	SampleIDentifier  = C.PERF_SAMPLE_IDENTIFIER
	SampleTransaction = C.PERF_SAMPLE_TRANSACTION
	SampleRegsIntr    = C.PERF_SAMPLE_REGS_INTR
	SampleMax         = C.PERF_SAMPLE_MAX
)

// ReadFormat as declared in linux/perf_event.h:260
type ReadFormat int32

// ReadFormat enumeration from linux/perf_event.h:260
const (
	FormatTotalTimeEnabled = C.PERF_FORMAT_TOTAL_TIME_ENABLED
	FormatTotalTimeRunning = C.PERF_FORMAT_TOTAL_TIME_RUNNING
	FormatID               = C.PERF_FORMAT_ID
	FormatGroup            = C.PERF_FORMAT_GROUP
	FormatMax              = C.PERF_FORMAT_MAX
)

// IocFlags as declared in linux/perf_event.h:411
type IocFlags int32

// IocFlags enumeration from linux/perf_event.h:411
const (
	IocFlagGroup = C.PERF_IOC_FLAG_GROUP
)

// Type as declared in linux/perf_event.h:613
type Type int32

// Type enumeration from linux/perf_event.h:613
const (
	RecordMmap          = C.PERF_RECORD_MMAP
	RecordLost          = C.PERF_RECORD_LOST
	RecordComm          = C.PERF_RECORD_COMM
	RecordExit          = C.PERF_RECORD_EXIT
	RecordThrottle      = C.PERF_RECORD_THROTTLE
	RecordUnthrottle    = C.PERF_RECORD_UNTHROTTLE
	RecordFork          = C.PERF_RECORD_FORK
	RecordRead          = C.PERF_RECORD_READ
	RecordSample        = C.PERF_RECORD_SAMPLE
	RecordMmap2         = C.PERF_RECORD_MMAP2
	RecordAux           = C.PERF_RECORD_AUX
	RecordItraceStart   = C.PERF_RECORD_ITRACE_START
	RecordLostSamples   = C.PERF_RECORD_LOST_SAMPLES
	RecordSwitch        = C.PERF_RECORD_SWITCH
	RecordSwitchCPUWide = C.PERF_RECORD_SWITCH_CPU_WIDE
	RecordMax           = C.PERF_RECORD_MAX
)

// PerfTypeID as declared in linux/perf_event.h:28
type PerfTypeID int32

// PerfTypeID enumeration from linux/perf_event.h:28
const (
	TypeHardware   = C.PERF_TYPE_HARDWARE
	TypeSoftware   = C.PERF_TYPE_SOFTWARE
	TypeTracepoint = C.PERF_TYPE_TRACEPOINT
	TypeHWCache    = C.PERF_TYPE_HW_CACHE
	TypeRaw        = C.PERF_TYPE_RAW
	TypeBreakpoint = C.PERF_TYPE_BREAKPOINT
	TypeMax        = C.PERF_TYPE_MAX
)

// PerfHwID as declared in linux/perf_event.h:44
type PerfHwID int32

// PerfHwID enumeration from linux/perf_event.h:44
const (
	CountHWCPUCycles             = C.PERF_COUNT_HW_CPU_CYCLES
	CountHWInstructions          = C.PERF_COUNT_HW_INSTRUCTIONS
	CountHWCacheReferences       = C.PERF_COUNT_HW_CACHE_REFERENCES
	CountHWCacheMisses           = C.PERF_COUNT_HW_CACHE_MISSES
	CountHWBranchInstructions    = C.PERF_COUNT_HW_BRANCH_INSTRUCTIONS
	CountHWBranchMisses          = C.PERF_COUNT_HW_BRANCH_MISSES
	CountHWBusCycles             = C.PERF_COUNT_HW_BUS_CYCLES
	CountHWStalledCyclesFrontend = C.PERF_COUNT_HW_STALLED_CYCLES_FRONTEND
	CountHWStalledCyclesBackend  = C.PERF_COUNT_HW_STALLED_CYCLES_BACKEND
	CountHWRefCPUCycles          = C.PERF_COUNT_HW_REF_CPU_CYCLES
	CountHWMax                   = C.PERF_COUNT_HW_MAX
)

// PerfHwCacheID as declared in linux/perf_event.h:69
type PerfHwCacheID int32

// PerfHwCacheID enumeration from linux/perf_event.h:69
const (
	CountHWCacheL1d  = C.PERF_COUNT_HW_CACHE_L1D
	CountHWCacheL1i  = C.PERF_COUNT_HW_CACHE_L1I
	CountHWCacheLl   = C.PERF_COUNT_HW_CACHE_LL
	CountHWCacheDtlb = C.PERF_COUNT_HW_CACHE_DTLB
	CountHWCacheItlb = C.PERF_COUNT_HW_CACHE_ITLB
	CountHWCacheBpu  = C.PERF_COUNT_HW_CACHE_BPU
	CountHWCacheNode = C.PERF_COUNT_HW_CACHE_NODE
	CountHWCacheMax  = C.PERF_COUNT_HW_CACHE_MAX
)

// PerfHwCacheOpID as declared in linux/perf_event.h:81
type PerfHwCacheOpID int32

// PerfHwCacheOpID enumeration from linux/perf_event.h:81
const (
	CountHWCacheOpRead     = C.PERF_COUNT_HW_CACHE_OP_READ
	CountHWCacheOpWrite    = C.PERF_COUNT_HW_CACHE_OP_WRITE
	CountHWCacheOpPrefetch = C.PERF_COUNT_HW_CACHE_OP_PREFETCH
	CountHWCacheOpMax      = C.PERF_COUNT_HW_CACHE_OP_MAX
)

// PerfHwCacheOpResultID as declared in linux/perf_event.h:89
type PerfHwCacheOpResultID int32

// PerfHwCacheOpResultID enumeration from linux/perf_event.h:89
const (
	CountHWCacheResultAccess = C.PERF_COUNT_HW_CACHE_RESULT_ACCESS
	CountHWCacheResultMiss   = C.PERF_COUNT_HW_CACHE_RESULT_MISS
	CountHWCacheResultMax    = C.PERF_COUNT_HW_CACHE_RESULT_MAX
)

// PerfSwIds as declared in linux/perf_event.h:102
type PerfSwIds int32

// PerfSwIds enumeration from linux/perf_event.h:102
const (
	CountSWCPUClock        = C.PERF_COUNT_SW_CPU_CLOCK
	CountSWTaskClock       = C.PERF_COUNT_SW_TASK_CLOCK
	CountSWPageFaults      = C.PERF_COUNT_SW_PAGE_FAULTS
	CountSWContextSwitches = C.PERF_COUNT_SW_CONTEXT_SWITCHES
	CountSWCPUMigrations   = C.PERF_COUNT_SW_CPU_MIGRATIONS
	CountSWPageFaultsMin   = C.PERF_COUNT_SW_PAGE_FAULTS_MIN
	CountSWPageFaultsMaj   = C.PERF_COUNT_SW_PAGE_FAULTS_MAJ
	CountSWAlignmentFaults = C.PERF_COUNT_SW_ALIGNMENT_FAULTS
	CountSWEmulationFaults = C.PERF_COUNT_SW_EMULATION_FAULTS
	CountSWDummy           = C.PERF_COUNT_SW_DUMMY
	CountSWBpfOutput       = C.PERF_COUNT_SW_BPF_OUTPUT
	CountSWMax             = C.PERF_COUNT_SW_MAX
)

// PerfBranchSampleTypeShift as declared in linux/perf_event.h:156
type PerfBranchSampleTypeShift int32

// PerfBranchSampleTypeShift enumeration from linux/perf_event.h:156
const (
	SampleBranchUserShift      = C.PERF_SAMPLE_BRANCH_USER_SHIFT
	SampleBranchKernelShift    = C.PERF_SAMPLE_BRANCH_KERNEL_SHIFT
	SampleBranchHVShift        = C.PERF_SAMPLE_BRANCH_HV_SHIFT
	SampleBranchAnyShift       = C.PERF_SAMPLE_BRANCH_ANY_SHIFT
	SampleBranchAnyCallShift   = C.PERF_SAMPLE_BRANCH_ANY_CALL_SHIFT
	SampleBranchAnyReturnShift = C.PERF_SAMPLE_BRANCH_ANY_RETURN_SHIFT
	SampleBranchIndCallShift   = C.PERF_SAMPLE_BRANCH_IND_CALL_SHIFT
	SampleBranchAbortTxShift   = C.PERF_SAMPLE_BRANCH_ABORT_TX_SHIFT
	SampleBranchInTxShift      = C.PERF_SAMPLE_BRANCH_IN_TX_SHIFT
	SampleBranchNoTxShift      = C.PERF_SAMPLE_BRANCH_NO_TX_SHIFT
	SampleBranchCondShift      = C.PERF_SAMPLE_BRANCH_COND_SHIFT
	SampleBranchCallStackShift = C.PERF_SAMPLE_BRANCH_CALL_STACK_SHIFT
	SampleBranchIndJumpShift   = C.PERF_SAMPLE_BRANCH_IND_JUMP_SHIFT
	SampleBranchCallShift      = C.PERF_SAMPLE_BRANCH_CALL_SHIFT
	SampleBranchNoFlagsShift   = C.PERF_SAMPLE_BRANCH_NO_FLAGS_SHIFT
	SampleBranchNoCyclesShift  = C.PERF_SAMPLE_BRANCH_NO_CYCLES_SHIFT
	SampleBranchMaxShift       = C.PERF_SAMPLE_BRANCH_MAX_SHIFT
)

// PerfBranchSampleType as declared in linux/perf_event.h:180
type PerfBranchSampleType int32

// PerfBranchSampleType enumeration from linux/perf_event.h:180
const (
	SampleBranchUser      = C.PERF_SAMPLE_BRANCH_USER
	SampleBranchKernel    = C.PERF_SAMPLE_BRANCH_KERNEL
	SampleBranchHV        = C.PERF_SAMPLE_BRANCH_HV
	SampleBranchAny       = C.PERF_SAMPLE_BRANCH_ANY
	SampleBranchAnyCall   = C.PERF_SAMPLE_BRANCH_ANY_CALL
	SampleBranchAnyReturn = C.PERF_SAMPLE_BRANCH_ANY_RETURN
	SampleBranchIndCall   = C.PERF_SAMPLE_BRANCH_IND_CALL
	SampleBranchAbortTx   = C.PERF_SAMPLE_BRANCH_ABORT_TX
	SampleBranchInTx      = C.PERF_SAMPLE_BRANCH_IN_TX
	SampleBranchNoTx      = C.PERF_SAMPLE_BRANCH_NO_TX
	SampleBranchCond      = C.PERF_SAMPLE_BRANCH_COND
	SampleBranchCallStack = C.PERF_SAMPLE_BRANCH_CALL_STACK
	SampleBranchIndJump   = C.PERF_SAMPLE_BRANCH_IND_JUMP
	SampleBranchCall      = C.PERF_SAMPLE_BRANCH_CALL
	SampleBranchNoFlags   = C.PERF_SAMPLE_BRANCH_NO_FLAGS
	SampleBranchNoCycles  = C.PERF_SAMPLE_BRANCH_NO_CYCLES
	SampleBranchMax       = C.PERF_SAMPLE_BRANCH_MAX
)

// PerfSampleRegsAbi as declared in linux/perf_event.h:212
type PerfSampleRegsAbi int32

// PerfSampleRegsAbi enumeration from linux/perf_event.h:212
const (
	SampleRegsABINone = C.PERF_SAMPLE_REGS_ABI_NONE
	SampleRegsABI32   = C.PERF_SAMPLE_REGS_ABI_32
	SampleRegsABI64   = C.PERF_SAMPLE_REGS_ABI_64
)

const (
	// TxnElision as declared in linux/perf_event.h:223
	TxnElision = C.PERF_TXN_ELISION
	// TxnTransaction as declared in linux/perf_event.h:224
	TxnTransaction = C.PERF_TXN_TRANSACTION
	// TxnSync as declared in linux/perf_event.h:225
	TxnSync = C.PERF_TXN_SYNC
	// TxnAsync as declared in linux/perf_event.h:226
	TxnAsync = C.PERF_TXN_ASYNC
	// TxnRetry as declared in linux/perf_event.h:227
	TxnRetry = C.PERF_TXN_RETRY
	// TxnConflict as declared in linux/perf_event.h:228
	TxnConflict = C.PERF_TXN_CONFLICT
	// TxnCapacityWrite as declared in linux/perf_event.h:229
	TxnCapacityWrite = C.PERF_TXN_CAPACITY_WRITE
	// TxnCapacityRead as declared in linux/perf_event.h:230
	TxnCapacityRead = C.PERF_TXN_CAPACITY_READ
	// TxnMax as declared in linux/perf_event.h:232
	TxnMax = C.PERF_TXN_MAX
	// TxnAbortMask as declared in linux/perf_event.h:236
	TxnAbortMask = C.PERF_TXN_ABORT_MASK
	// TxnAbortShift as declared in linux/perf_event.h:237
	TxnAbortShift = C.PERF_TXN_ABORT_SHIFT
)

// PerfCallchainContext as declared in linux/perf_event.h:871
type PerfCallchainContext int32

// PerfCallchainContext enumeration from linux/perf_event.h:871
const (
	ContextHV          = C.PERF_CONTEXT_HV
	ContextKernel      = C.PERF_CONTEXT_KERNEL
	ContextUser        = C.PERF_CONTEXT_USER
	ContextGuest       = C.PERF_CONTEXT_GUEST
	ContextGuestKernel = C.PERF_CONTEXT_GUEST_KERNEL
	ContextGuestUser   = C.PERF_CONTEXT_GUEST_USER
	ContextMax         = C.PERF_CONTEXT_MAX
)
